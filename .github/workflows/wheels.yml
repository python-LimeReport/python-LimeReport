name: Build

on: [push, pull_request]

env:
  PIP_EXTRA_INDEX_URL: "https://download.qt.io/official_releases/QtForPython"

jobs:
  build_sdist:
    name: Build source distribution (Qt ${{ matrix.qt }} USE_ZINT = ${{ matrix.zint }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        zint: [TRUE, FALSE]
        qt: [6.4.2, 6.5.3, 6.6.2]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt }}
          cache: true

      - name: Apply patches
        working-directory: LimeReport
        run: git apply ../patches/*.patch

      - name: Build sdist
        run: pipx run build --sdist
        env:
          LIMEREPORT_USE_ZINT: ${{ matrix.zint }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
          
  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.cibw_archs }} (Qt ${{ matrix.qt }} USE_ZINT = ${{ matrix.zint }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        zint: ["TRUE", "FALSE"]
        qt: [6.4.2, 6.5.3, 6.6.2]
        os: [ubuntu-20.04, windows-latest]
        cibw_archs: ["x86_64", "aarch64", "auto"]
        exclude:
          - os: ubuntu-20.04
            cibw_archs: "auto"
          - os: windows-latest
            cibw_archs: "x86_64"
          - os: windows-latest
            cibw_archs: "aarch64"
          - qt: 6.4.2
            cibw_archs: "aarch64"
    steps:
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup env variables
        shell: bash
        run: $GITHUB_WORKSPACE/.github/setup_wheels_env.sh

      - name: Apply patches
        working-directory: LimeReport
        shell: bash
        run: git apply ../patches/*.patch

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt }}
          cache: true
        if: runner.os == 'Windows'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_BUILD: "cp39-manylinux* cp39-win_amd64"
          CIBW_ARCHS: "${{ matrix.cibw_archs }}"

          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28


          CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
            pip install PySide6==${{ matrix.qt }} shiboken6==${{ matrix.qt }} \
            && SITE_PACKAGES=$(python3 -c "import sysconfig; print(sysconfig.get_paths()['purelib'])")
            && LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SITE_PACKAGES/PySide6:$SITE_PACKAGES/shiboken6 auditwheel -v repair $AUDITWHEEL_REPAIR_OPTIONS -w {dest_dir} {wheel}

          CIBW_BEFORE_BUILD_WINDOWS: >
            python3 ./build_scripts/set-qt-constraint.py ${{ matrix.qt }}

          CIBW_BEFORE_BUILD_LINUX: >
            yum -y update
            && yum -y groupinstall "Development Tools"
            && yum -y install \
                wget \
                openssl-devel \
                bzip2-devel \
                libffi-devel \
                cmake \
                clang \
                clang-devel \
                llvm \
                llvm-devel \
                mesa-libGL-devel \
                pulseaudio-libs-glib2 \
                libxkbcommon \
            && yum clean all
            && rm -rf /var/cache/yum
            && python3 -m pip install --user aqtinstall==3.1.7
            && python3 -m aqt install-qt --outputdir /opt/Qt linux desktop ${{ matrix.qt }}
            && python3 ./build_scripts/set-qt-constraint.py ${{ matrix.qt }}
          CIBW_ENVIRONMENT: >
            LIMEREPORT_USE_ZINT="${{ matrix.zint }}"

          CIBW_ENVIRONMENT_LINUX: >
            LIMEREPORT_USE_ZINT="${{ matrix.zint }}"
            LD_LIBRARY_PATH="/opt/Qt/${{ matrix.qt }}/gcc_64/lib"
            CMAKE_BUILD_PARALLEL_LEVEL="$(nproc)"
            PATH=$PATH:/opt/Qt/${{ matrix.qt }}/gcc_64/bin
          CIBW_ENVIRONMENT_PASS_LINUX: AUDITWHEEL_REPAIR_OPTIONS PIP_EXTRA_INDEX_URL

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  release:
    name: Release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
      contents: write
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - name: Github Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ contains(github.ref, '.dev') }}
          files: dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
